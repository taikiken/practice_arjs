// Mixin
//
// all browser 用 mixin, 下位ブラウザ用上書きは _asset.scss で行います
//
// Compatible in latest Browser
// Styleguide 2.3.0

// styleguide:ignore:start
$arg: null;
$each-item: null;
// prc-each
// 拡張 each iterator
//
// $list - 捜査配列
// Styleguide 2.3.1
@mixin prc-each($list...) {
  // http://sass-lang.com/documentation/Sass/Script/Functions.html#length-instance_method
  // noinspection CssInvalidFunction
  @for $item from 1 through length($list) {
    $each-item: $item !global;
    // http://sass-lang.com/documentation/Sass/Script/Functions.html#nth-instance_method
    // noinspection CssInvalidFunction
    $arg: nth($list, $each-item) !global;
    @content;
  }
}
// styleguide:ignore:end

// inline-block
// 下位ブラウザ(IE8, 7, 6)での使用はサポートブラウザに合わせoverrideします
// Styleguide 2.3.2
@mixin inline-block {
  display: inline-block;
}

// table-cell
// $vertical=middle - vertical alignment
// 下位ブラウザ(IE8, 7, 6)での使用はサポートブラウザに合わせoverrideします
// Styleguide 2.3.3
@mixin table-cell ($vertical: middle) {
  display: table-cell;
  vertical-align: $vertical;
}

// clearfix
// 下位ブラウザ(IE8, 7, 6)での使用はサポートブラウザに合わせoverrideします
// Styleguide 2.3.4
@mixin clearfix {
  &::before,
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// cf
// clearfix alias
// Styleguide 2.3.5
@mixin cf {
  @include clearfix;
}

// link-decoration
// link color
// a tag color 設定
// $color1 - hex, active color
// $color2 - hex, hover color
// $decoration-off=none - text-decoration: none
// $decoration-on=underline - text-decoration: underline
// Styleguide 2.3.6
@mixin link-decoration($color1, $color2, $decoration-off: none, $decoration-on: underline) {
  &:link,
  &:visited,
  &:hover,
  &:active {
    color: $color1;
    text-decoration: $decoration-off;
  }

  &:hover {
    color: $color2;
    text-decoration: $decoration-on;
  }
}

// fluid-img
// 画像 幅100%
// 下位ブラウザ(IE8, 7, 6)での使用はサポートブラウザに合わせoverrideします
// $w=null - width 設定値
// Styleguide 2.3.7
@mixin fluid-img($w: null) {
  width: #{$w};
  max-width: 100%;
  height: auto;
}

// font-smoothing
// CSS3 font-smoothing 設定
// $value=on - 設定値をどちらにするか
// Styleguide 2.3.8
@mixin font-smoothing($value: on) {
  @if $value == on {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  } @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}

// hide-text
// container text を隠します（背景画像表示のため）
// Styleguide 2.3.9
@mixin hide-text {
  overflow: hidden;
  font-size: 0;
  text-indent: 100%;
  white-space: nowrap;
  outline: none;
}

// ratio controll
// 任意のアスペクト比で可変ボックスを作成
// Styleguide 2.3.10
@mixin aspect-ratio($width, $height) {
  position: relative;

  &::before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }

  & > *:first-child {
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}

// ---------------------------

// opacity
// 透過設定します
// $opacity - number 0 ~ 1
// Styleguide 2.3.11
@mixin opacity ($opacity) {
  opacity: $opacity;
}

// over-opacity
// hover で 透過率 0.75 にします
// $opacity=0.75 - hover時の透過率
// Styleguide 2.3.12
@mixin over-opacity($opacity: 0.75) {
  @include opacity($opacity);
}

// over-opacity-img
// img tag 用 hover で 透過率 0.75 にします
// $opacity=0.75 - hover時の透過率
// Styleguide 2.3.13
@mixin over-opacity-img($opacity: 0.75) {
  // sass-lint:disable no-color-literals
  background-color: #fff;
  // sass-lint:enable no-color-literals

  img {
    @include opacity($opacity);
  }
}

// over-opacity-anime
// hoverで 透過率 0.75 にします (CSS transiton 使用)
// $opacity=.75 - hover時の透過率
// Styleguide 2.3.14
@mixin over-opacity-anime($opacity: 0.75) {
  opacity: $opacity;
  transition: opacity ease-out 0.4s;
  @content;
}

// ---------------------------

// pos-middle
// vertical middle にします
// $position=absolute - position option, absolute|fix
// Styleguide 2.3.15
@mixin pos-middle($position: absolute) {
  position: $position;
  top: 50%;
  transform: translateY(-50%);
}


// animate
// transitionを設定します
// Styleguide 2.3.16
@mixin transition($property: all, $duration: 0.25s, $easing: ease-in-out, $delay: 0s) {
  transition: $property $duration $easing $delay;
}


// ellipsis
// ellipsisを設定します
// Styleguide 2.3.17
@mixin ellipsis {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

// background color rgba 設定します
// Styleguide 2.3.18
// sass-lint:disable no-color-literals
@mixin bgc-rgba($r, $g, $b, $a) {
  background-color: rgba($r, $g, $b, $a);
}
// sass-lint:enable no-color-literals

// -------------------------------------------------------------
// vw
// -------------------------------------------------------------
// vw
// 第一引数で基準となる画面幅のフォントサイズ、第二引数で基準となる画面幅を入力
// $size {number} - 基準フォントサイズ(px)
// $viewport {number} - 基準画面幅
// Styleguide 2.3.19
@function get-vw($size, $viewport) {
  $rate: 100 / $viewport;
  @return $rate * $size * 1vw;
}

// 可変サイズフォント(vw)を設定する
// $font-size: target font size (px) - default 10
// $viewport: 基準画面幅 - default 750
// @example
// @include(12, 750);
// 画面幅 750px 幅の時に 12px になる font
// Styleguide 2.3.20
@mixin vw($font-size: 10, $viewport: 750) {
  font-size: get-vw($font-size, $viewport);
}

// -------------------------------------------------------------
// rotate
// -------------------------------------------------------------
// rotate
@mixin rotate-with-degree($degree: 90, $origin: 50% 50% 0) {
  transform: rotateZ(#{$degree}deg);
  transform-origin: $origin;
}

// rotate 90
@mixin rotate-90($origin: 50% 50% 0) {
  @include rotate-with-degree(90, $origin);
}

// rotate 45
@mixin rotate-45($origin: 50% 50% 0) {
  @include rotate-with-degree(45, $origin);
}

// rotate 45 negative
@mixin rotate-negative-45($origin: 50% 50% 0) {
  @include rotate-with-degree(-45, $origin);
}

// -------------------------------------------------------------
// sprite image
// -------------------------------------------------------------
// sprite by spritesmith
// sprite sheet output mixin
// $props - example ref: _sprite.scss
// $modal-1992-lead-name: 'modal_1992_lead';
// $modal-1992-lead-x: 938px;
// $modal-1992-lead-y: 253px;
// $modal-1992-lead-offset-x: -938px;
// $modal-1992-lead-offset-y: -253px;
// $modal-1992-lead-width: 611px;
// $modal-1992-lead-height: 127px;
// $modal-1992-lead-total-width: 1549px;
// $modal-1992-lead-total-height: 735px;
// $modal-1992-lead-image: '/assets/images/history/sp/sprite/sprite-1992.png';
// $modal-1992-lead: (938px, 253px, -938px, -253px, 611px, 127px, 1549px, 735px, '/assets/images/history/sp/sprite/sprite-1992.png', 'modal_1992_lead', );
//
// $props {string[]} sprite 画像プロパティリスト
// $background-size {string|number=0} - background-size に使用します, 100% 100% / 100px 100px / auto auto ...
// - 0 以外指定の時に `background-size` property を設定します
// $aspect {number=1} - スケール比率 0.5 or 1 を指定する
//
// @example
// .modal-lead {
//   @include rao-sprite($modal-1992-lead, $sprite-1992-width, $sprite-1992-height);
// }
@mixin sprites($props, $background-size: 0, $aspect: 1) {
  width: nth($props, 5) * $aspect;
  height: nth($props, 6) * $aspect;
  // offset-x
  $x: nth($props, 3) * $aspect;
  // offset-y
  $y: nth($props, 4) * $aspect;
  // sprite size
  background: url(nth($props, 9)) no-repeat $x $y;
  @if $background-size != 0 {
    background-size: $background-size;
  }
}

// background-size の width / height を指定する時に使用します
// `sprites` でも同じ様に設定できます
// @example
// .sprite {
//   @include sprite-scale($modal-1992-lead, 100px, 50px);
// }
//
// .sprite {
//   @include sprites($modal-1992-lead, 100px 50px);
// }
// @see https://developer.mozilla.org/ja/docs/Web/CSS/background-size
@mixin sprite-scale($props, $width: 0, $height: 0, $aspect: 1) {
  @include sprites($props, 0, $aspect);
  @if $width != 0 and $height != 0 {
    background-size: $width $height;
  }
}

// sprite width / height
@mixin sprites-size($props, $aspect: 1) {
  width: nth($props, 5) * $aspect;
  height: nth($props, 6) * $aspect;
}
